//create users controller
//incorporate sessions
//create handlebars templates to render login and sign up forms
//write coffeescript to receive handlebars render function and create a cookie from the session
//use coffeescript to send forms with axios instead of method override
//create click events on login, logout, signup, settings/email spans in coffeescript
//add jquery to html scripts
//add logout path to users controller
//create login = index.hbs, signup = signup.hbs, todos = todos.hbs
//create axios call to render signup
//create axios call to render login
//create axios call to logout
//create backend settings get route
//create settings template
//modify put controller to change both username and password
//create axios calls to hit put controller
//create axios call to render settings
//if front end cookie matches session on index render, send to todos page
//add delete user to settings page

test users controller and front end

front end validation

test front end validation

test all user api routes
test user html
test user front end javascript

create contexts controller
print contexts to page
write coffeescript to crud adding contexts

create todos controller
write front end coffeescript to axios crud the todos
print todos to page

learn less
style login and signup pages
write coffeescript and less to create dynamic, interactive todos with adding contexts

add nodemailer functionality to reset password
